@page "/polothirtyfive"
@using OnlineShop.Utilities
@using OnlineShop.Models
@using OnlineShop.States
@inject CartState CartState
@inject HttpClient Http


<h3 class="product-description-bold-larger">$35 Product List</h3>
<div class="d-flex justify-content-center">
    <h5 class="payment-dicription-title"><b>Select Pricing:</b></h5>
</div>
<div class="d-flex justify-content-center">
    <div class="btn-group radio-btn" role="group" aria-label="Basic radio toggle button group">
        <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked @onclick="ShowProductDisplayThirtyfive">
        <label class="btn btn-outline-primary" for="btnradio1">$35 Shirts</label>

        <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off" @onclick="ShowProductDisplayForty">
        <label class="btn btn-outline-primary" for="btnradio2">$40 Shirts</label>

        <input type="radio" class="btn-check" name="btnradio" id="btnradio3" autocomplete="off" @onclick="ShowProductDisplayFiftyfive">
        <label class="btn btn-outline-primary" for="btnradio3">$55 Shirts</label>
    </div>
</div>
<hr/><br/>
@if(SelectedPrice == "35")
{ 
    @foreach (var product in Products)
    {
        @if(product.Price <= 35)
        {
            <ProductDisplay Product="product"
                        PriceCalculaterChanged="UpdateTotalPrice" 
                        DisplayBuyButton="true"
                        ItemCountFunction="@ItemCountFunction" />  
                        CounterDisplay++;
        }    
    }
    <p>#@CounterDisplay </p>
    CounterDisplay = 0;
}
@if(SelectedPrice == "40" || SelectedParts == 40)
{
    @foreach (var product in Products)
    {
        @if(product.Price >= 40 && product.Price < 50)
        {
            <ProductDisplay Product="product"
                        PriceCalculaterChanged="UpdateTotalPrice" 
                        DisplayBuyButton="true"
                        ItemCountFunction="@ItemCountFunction" />  
                        CounterDisplay++;
        }    
    }
    <p>#@CounterDisplay</p>
    CounterDisplay = 0;
}
@if(SelectedPrice == "55")
{
    @foreach (var product in Products)
    {
        @if(product.Price >= 50)
        {
            <ProductDisplay Product="product"
                        PriceCalculaterChanged="UpdateTotalPrice" 
                        DisplayBuyButton="true"
                        ItemCountFunction="@ItemCountFunction" />  
                        CounterDisplay++;
        }    
    }
    <p>#@CounterDisplay</p>
    CounterDisplay = 0;
}
@code{
    public List<Product> Products { get; set; } = new();
    [Parameter]
    public EventCallback<decimal> UpdateTotalPrice { get; set; }
    [Parameter]
    public int ItemCountFunction { get; set;}
    private int thirtyFivePrice = 0;
    private int CounterDisplay { get; set; }
    private string ?SelectedPrice { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Products = await Http.GetFromJsonAsync<List<Product>>("sample-data/products.json") ?? new();
        OnRadioChange(new ChangeEventArgs { Value = "35" });
    }

    private void ShowProductDisplayThirtyfive()
    {
        OnRadioChange(new ChangeEventArgs { Value = "35" });
    }
    private void ShowProductDisplayForty()
    {
        OnRadioChange(new ChangeEventArgs { Value = "40" });
    }
    private void ShowProductDisplayFiftyfive()
    {
        OnRadioChange(new ChangeEventArgs { Value = "55" });
    }
    private void OnRadioChange(ChangeEventArgs e)
    {
        if(e.Value != null)
        {
           SelectedPrice = e.Value.ToString(); 
        }
        else
        {
            SelectedPrice = string.Empty;
        }
        
    }

    
}
@code {

    
    private int SelectedParts { get; set; }

    
    private void ThirtyFivePriceFunction()
    {
        SelectedPrice = "35";
        StateHasChanged();
    }

    private void RunFunction()
    {
        SelectedParts = 35;
    }
}